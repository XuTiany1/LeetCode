#############################################################################################################################
==================================================== NAME ====================================================
#############################################################################################################################

INPUT: 
    int[]: nums

PURPOSE:
Given an integer array nums, 
return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.

OUTPUT:
    return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.


Example:

Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Explanation: 
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.
The distinct triplets are [-1,0,1] and [-1,-1,2].
Notice that the order of the output and the order of the triplets does not matter.



MY SOLUTION:

    def threeSum(self, nums: List[int]) -> List[List[int]]:

        INIT result = []

        SORT nums in increasing order


        FOR i in range(0 to (nums' length - 2) ):

            SET left_pointer = i+1
            SET right_pointer = nums' length -1

            WHILE (left_pointer < right_pointer):

                SET curr_sum = nums[i] + nums[left_pointer] + nums[right_pointer]


                IF (curr_sum == 0):
                THEN
                    APPEND [i, left_pointer, right_pointer] to results

                    WHILE ((left_pointer < right_pointer) && (nums[left_pointer] == nums[left_pointer-1])):
                        left_pointer += 1
                    
                    WHILE ((left_pointer < right_pointer) && (nums[right_pointer] == nums[right_pointer+1])):
                        right -= 1
                        
                
                ELSE IF (curr_sum < 0):
                    left_pointer += 1
                
                ELSE:
                    right_pointer += 1
        
        RETURN result










    

------------------------------------------------------------------------------------------------
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ OPTIMAL SOLUTION $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 
------------------------------------------------------------------------------------------------